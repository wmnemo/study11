1. github 계정
2. Ananconda
3. python charm 설치 (jetbrains.com)
 
file | Setting | Project(Project Interpreter)


* 프로젝트 생성
C:\django_src>django-admin startproject mysite .

setting.py 수정
 - LANGUAGE_CODE = 'ko'
 - TIME_ZONE = 'Asia/Seoul'
 - STATIC_ROOT = os.path.join(BASE_DIR, 'static')

python manage.py changepassword admin


********** 데이터 생성

C:\django_src>python manage.py makemigrations blog
Migrations for 'blog':
  blog\migrations\0001_initial.py
    - Create model Post

C:\django_src>python manage.py migrate blog
Operations to perform:
  Apply all migrations: blog
Running migrations:
  Applying blog.0001_initial... OK

C:\django_src>python manage.py showmigrations blog
blog
 [X] 0001_initial

********** 데이터 확인

Microsoft Windows [Version 6.1.7601]
Copyright (c) 2009 Microsoft Corporation. All rights reserved.

C:\django_src>python manage.py shell
Python 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 10:22:32) [MSC v.1900 64 bit (AMD64)]
Type 'copyright', 'credits' or 'license' for more information
IPython 6.2.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from blog.models import Post

In [2]: Post.objects.all()
Out[2]: <QuerySet [<Post: 샘플>, <Post: 샘플11>, <Post: 샘플222>, <Post: 샘플444>]>

In [3]: from django.contrib.auth.models import User

In [4]: me=User.objects.get(username='admin')

In [5]: me
Out[5]: <User: admin>

In [6]: Post.objects.create(author=me, title='타이틀', context:'내용')
  File "<ipython-input-6-92f06d9e6105>", line 1
    Post.objects.create(author=me, title='타이틀', context:'내용')
                                                       ^
SyntaxError: invalid syntax


In [7]: Post.objects.create(author=me, title='타이틀', context='내용')
Out[7]: <Post: 타이틀>

In [8]: Post.objects.all()
Out[8]: <QuerySet [<Post: 샘플>, <Post: 샘플11>, <Post: 샘플222>, <Post: 샘플444>, <Post: 타이틀>]>

In [9]: Post.objects.filter(author=me)
Out[9]: <QuerySet [<Post: 샘플>, <Post: 샘플11>, <Post: 샘플222>, <Post: 샘플444>, <Post: 타이틀>]>

In [10]: Post.objects.filter(title__contains='샘플')
Out[10]: <QuerySet [<Post: 샘플>, <Post: 샘플11>, <Post: 샘플222>, <Post: 샘플444>]>

In [11]: from django.utils import timezone

In [12]: Post.objects.filter(published_date__lte=timezone.now())
Out[12]: <QuerySet [<Post: 샘플>]>

In [13]: Post.objects.all()
Out[13]: <QuerySet [<Post: 샘플>, <Post: 샘플11>, <Post: 샘플222>, <Post: 샘플444>, <Post: 타이틀>]>

In [14]: mypost = Post.objects.get(title='타이트')
---------------------------------------------------------------------------
DoesNotExist                              Traceback (most recent call last)
<ipython-input-14-c23ef1c2755b> in <module>()
----> 1 mypost = Post.objects.get(title='타이트')

C:\Anaconda3\lib\site-packages\django\db\models\manager.py in manager_method(self, *args, **kwargs)
     83         def create_method(name, method):
     84             def manager_method(self, *args, **kwargs):
---> 85                 return getattr(self.get_queryset(), name)(*args, **kwargs)
     86             manager_method.__name__ = method.__name__
     87             manager_method.__doc__ = method.__doc__

C:\Anaconda3\lib\site-packages\django\db\models\query.py in get(self, *args, **kwargs)
    378             raise self.model.DoesNotExist(
    379                 "%s matching query does not exist." %
--> 380                 self.model._meta.object_name
    381             )
    382         raise self.model.MultipleObjectsReturned(

DoesNotExist: Post matching query does not exist.

In [15]: mypost = Post.objects.get(title='타이틀')

In [16]: mypost
Out[16]: <Post: 타이틀>

In [17]: mypost.publish
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-17-fc6bd80987ea> in <module>()
----> 1 mypost.publish

AttributeError: 'Post' object has no attribute 'publish'

In [18]: mypost.publish()
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-18-5a6a5552f72c> in <module>()
----> 1 mypost.publish()

AttributeError: 'Post' object has no attribute 'publish'

In [19]: post = Post.objects.get(title='타이틀')

In [20]: post
Out[20]: <Post: 타이틀>

In [21]: post.publish()
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-21-6673668f8b81> in <module>()
----> 1 post.publish()

AttributeError: 'Post' object has no attribute 'publish'

In [22]: post.publish()
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-22-6673668f8b81> in <module>()
----> 1 post.publish()

AttributeError: 'Post' object has no attribute 'publish'

In [23]: exit

C:\django_src>python manage.py shell
Python 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 10:22:32) [MSC v.1900 64 bit (AMD64)]
Type 'copyright', 'credits' or 'license' for more information
IPython 6.2.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: post = Post.objects.get(title='타이틀')
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-1-d97fb0b975be> in <module>()
----> 1 post = Post.objects.get(title='타이틀')

NameError: name 'Post' is not defined

In [2]: from blog.models import Post

In [3]: post = Post.objects.get(title='타이틀')

In [4]: post.publish()

In [5]: from django.utils import timezone

In [6]: Post.objects.filter(published_date__lte=timezone.now())
Out[6]: <QuerySet [<Post: 샘플>, <Post: 타이틀>]>

In [7]: Post.object.get_object_or_404(title='타이트')
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-7-f2152a925785> in <module>()
----> 1 Post.object.get_object_or_404(title='타이트')

AttributeError: type object 'Post' has no attribute 'object'

In [10]: Post.objects.filter(published_date__lte=timezone.now()).order_by('create_date')
Out[10]: <QuerySet [<Post: 샘플>, <Post: 타이틀>]>

In [11]: Post.objects.filter(published_date__lte=timezone.now()).order_by('-create_date')
Out[11]: <QuerySet [<Post: 타이틀>, <Post: 샘플>]>

In [12]: 


========== 시간 ===========


icrosoft Windows [Version 6.1.7601]
Copyright (c) 2009 Microsoft Corporation. All rights reserved.

C:\django_src>python manage.py shell
Python 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 10:22:32) [MSC v.1900 64 bit (AMD64)]
Type 'copyright', 'credits' or 'license' for more information
IPython 6.2.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from blog.models import Post

In [2]: for post in Post.objects.raw('select * from blog_post'):
   ...:     print(post)
   ...: 
샘플
샘플11
샘플222
샘플444
타이틀

In [3]: for post in Post.objects.raw('select * from blog_post'):
   ...:     print(post.context)
   ...: 
   ...: 
내용이 없습니다.
공룡과 산토끼가 오순도순 정답게 살던 아주 옛날, 옛날, 머어어언 옛날...
엉뚱하고 발랄한 얼리맨들이 모여 사는 평화로운 석기 마을이 있다.
작은 토끼 대신 겁나 큰 매머드를 사냥하고픈 용감한 소년 ‘더그’(에디 레드메인)와 그의 베프 멧돼지 ‘호그놉’은 이 마을의 핵심 사고뭉치!

어느 날, 세계 정복을 꿈꾸는 청동기 왕국의 허당 악당 ‘누스’(톰 히들스턴) 총독이 쳐들어 오고 석기 마을은 그의 손에 넘어가 버린다. 마을을 되찾고 싶은 ‘더그’와 ‘호그놉’에게 ‘누스’총독은 엄청난 대결을 제안한다. ‘
더그’와 ‘호그놉’은 청동기 왕국의 ‘구나’(메이지 윌리암스)를 리더로 영입하고 친구들을 모아 오합지졸 팀을 꾸리는데…

‘더그’팀은 의욕 제로, 자신감 제로인 팀을 이끌고
석기 마을 VS 청동기 왕국의 인류 최초, 한.판.승.부에서 이길 수 있을까?
새로운 조합을 이룬 어벤져스,
역대 최강 빌런 타노스에 맞서
세계의 운명이 걸린 인피니티 스톤을 향한
무한 대결이 펼쳐진다!
내용이 없습니다.
내용

In [4]: import datetime

In [5]: d=datetime.date(2018,5,8)

In [6]: d
Out[6]: datetime.date(2018, 5, 8)

In [7]: t=datetime.time(12,25,30)

In [8]: t
Out[8]: datetime.time(12, 25, 30)

In [9]: dt = datetime.datetime.combine(d,t)

In [10]: dt
Out[10]: datetime.datetime(2018, 5, 8, 12, 25, 30)

In [11]: Post.objects.filter(published_date__lte=dt)
C:\Anaconda3\lib\site-packages\django\db\models\fields\__init__.py:1451: RuntimeWarning: DateTimeField Post.published_date received a naive datetime (2018-05-08 12:25:30) while time zone support is active.
  RuntimeWarning)
Out[11]: <QuerySet [<Post: 샘플>]>

In [12]: 


========== DB 설치 후에 마이그레이션 ======

db : mysite
id : django pass : djangoadmin

python manage.py createsuperuser
id : admin pass : djangoadmin


Microsoft Windows [Version 6.1.7601]
Copyright (c) 2009 Microsoft Corporation. All rights reserved.

C:\django_src>python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, blog, contenttypes, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying blog.0001_initial... OK
  Applying blog.0002_auto_20180508_1136... OK
  Applying sessions.0001_initial... OK

C:\django_src>python manage.py createsuperuser
Username (leave blank to use 'kosta'): admin
Email address: aaa@aaa.com
Password:
Password (again):
Error: Your passwords didn't match.
Password:
Password (again):
Superuser created successfully.

C:\django_src>python manage.py runserver
Performing system checks...
